Pode-se retirar o chip da placa MSP e inserir em uma protoboard. Assim, identificar quais são as entradas para programar e utilizar a palca na protoboard para programar.
--------------------------------------------------------------------------------------------------------------------
P1.X ou P2.X são entradas e saídas digitais
TAX são timers
TA1 e TA0 podem ser utilizados como comparadores além de timers.
AX+ e AX- são utilizados nos conversores AD
VREF pode ser utilizado para setar a tensão de referência
ACLK e SMCLK são clocks
SCLK SDO e SCL são utilizados para comunicação serial (SPI e I2C)
XIN e XOUT são utilizados para utilizar um cristal externo
_RST é utilizado para resetar o MSP430 quando levado ao baixo nível
--------------------------------------------------------------------------------------------------------------------
O MSP trabalha com dados de 16 bits, ou seja, dois bytes. Assim, a memória utiliza duas paklavras de dois bytes.
A organização dos bytes é feita da seguinte forma: o byte menos significante utiliza a memória acima e o less byte significant utiliza a primeira memória ou a memória mais baixa. Por exemplo, MSB ocupa o 0x0201 e o LSB ocupa o 0x0200.

O primeiro endereço é o 0x0000 (IEI - Interrupt Enable | Register) e o último é o 0xFFFF.
O endereço de uma palavra de dois bytes é dado pelo endereço menor que é sempre par e essa palavra é lida em um ciclo de clock do barramento.

Como o menos significativo fica no menor endereço, esse sistema de memória é little-endian. O Contrário é o big-endian.
--------------------------------------------------------------------------------------------------------------------
CPU roda na frequência máxima 16 MHz.
Caso velocidade seja uma necessidade, um sistema embarcado não é a melhor opção pois um embarcado roda paralelos programas simultaneamente.
Seu estado não é perdido quando a alimentação é cessada.
Registradores não estão na memória principal e sim na CPU.
Um stack pointer (SP) também é utilizado quando no meio do seu algoritmo há a chamada de uma outra função pois ele deve saber em qual linha ele deve voltar no algoritmo passado. 
O "return" se referencia aos dados alocados nas pilhas
--------------------------------------------------------------------------------------------------------------------
P1OUT|=2; o  que essa porra significa? Isso é uma forma de mascarar o bit ou bits de uma palavra;
XOR inverte utilizando 1. Quando você seta um bit, esse bit da outra palavra será invertida;
OR seta um bit utilizando 1. Quando você seta um bit, esse bit será setado;
AND zera um bit utilizando 0. Quando você reseta um bit, esse bit será resetado;
--------------------------------------------------------------------------------------------------------------------
Setar P1.1 --> P1OUT|=2;
Zerar P1.2 --> P1OUT &= ~4;
Inverter P1.3 --> P1OUT ~=BIT3;
--------------------------------------------------------------------------------------------------------------------
Para você poder utilizar BITO como 0x0000, BIT1 como 0x0001... Basta incluir a biblioteca msp no iníci do seu código
-------------------------------------------------------------------------------------------------------------------- 
P1DIR é para dizer se os pinos são de entrada ou de saída. Para setar o pino como entrada você reseta o pino. Para o pino ser saída, você seta o pino. Ou seja, Entrada = 0 e saída = 1.
P1DIR |= BIT 1 + BIT2 + BIT3 + BIT6;
-------------------------------------------------------------------------------------------------------------------- 
SE COLOCA ESSAS OPERAÇÕES ANTES DOS IGUAIS PARA PRESERVAR OS SINAIS ANTERIORES QUE ESTAVAM NESSES BITS
-------------------------------------------------------------------------------------------------------------------- 
Perguntas a serem pesquisadas:

- TACLK é o quê?
- Qual a diferença de _RST e Interrupt?
- Preciso do Emulation, JTAG e do Spy by Wire para programar na protoboard?
- O que é resistor de pullup e pulldown?
Resistor pullup é conectado ao Vcc e Pulldown é conectado ao terra. Só isso.
